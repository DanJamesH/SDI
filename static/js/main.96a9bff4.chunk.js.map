{"version":3,"sources":["views/Nav/index.jsx","views/Home/Particles/index.jsx","views/Home/index.jsx","views/Report/index.jsx","views/Documents/index.jsx","views/DataDisplay/VectorDataDisplay/index.jsx","views/DataDisplay/Map/index.jsx","views/DataDisplay/DrawerContent/index.jsx","views/DataDisplay/index.jsx","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","theme","root","flexGrow","menuButton","marginRight","spacing","title","appBar","zIndex","drawer","Nav","classes","history","useHistory","className","AppBar","position","Toolbar","style","backgroundColor","height","display","flexDirection","width","flex","justifyContent","alignItems","fontSize","color","Typography","variant","Button","onClick","param","push","ParticlesComponent","window","outerHeight","params","background","value","particles","number","density","enable","value_area","shape","type","stroke","polygon","nb_sides","opacity","random","anim","speed","opacity_min","sync","size","size_min","line_linked","distance","move","direction","straight","out_mode","bounce","attract","rotateX","rotateY","interactivity","detect_on","events","onhover","mode","resize","modes","duration","retina_detect","Home","React","useState","setValue","inputValue","setInputValue","useEffect","route","data","find","element","id","Particles","marginBottom","Autocomplete","onChange","event","newValue","onInputChange","newInputValue","options","getOptionLabel","option","renderInput","TextField","label","Report","Documents","table","maxWidth","maxHeight","Map","dataset","setLayer","reea","setLoading","grid","substations","roads","wave","MapContainer","center","zoom","scrollWheelZoom","LayersControl","BaseLayer","checked","name","TileLayer","attribution","url","Overlay","WMSTileLayer","layers","layer","format","transparent","drawerPaper","drawerContainer","overflow","DrawerContent","loading","CircularProgress","padding","marginTop","ListItem","ListItemAvatar","Avatar","ListItemText","primary","metadata","Owner","secondary","Date","Grid","container","gutterBottom","Abstract","List","Type","End","Category","Restrictions","open","drawerWidth","flexShrink","content","DataDisplay","location","useLocation","setIsLoading","setDataset","requiredData","pathname","CssBaseline","Drawer","paper","App","path","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.96a9bff4.chunk.js","sourcesContent":["import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport EcoTwoToneIcon from '@material-ui/icons/EcoTwoTone';\nimport { useHistory } from \"react-router-dom\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n  },\n}));\n\nexport default function Nav() {\n  const classes = useStyles();\n\n  let history = useHistory();\n\n  function handleClick(param) {\n    history.push(param);\n  }\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"fixed\" className={classes.appBar}>\n        <Toolbar style={{backgroundColor:\"#61dafb\", height:'7vh'}}>\n            <div style={{display:'flex', flexDirection:'row', width:'100%', }}>\n                <div style={{display:'flex', flexDirection:'row', flex:1, justifyContent:'flex-end', alignItems:'center'}}>\n                  <EcoTwoToneIcon style={{ fontSize: '5vh', color: \"#4caf50\", marginRight:'1vw' }}/>\n                  <Typography variant=\"h6\">\n                      Renewable Energy Research Hub\n                  </Typography>\n                </div>\n                <div style={{display:'flex', flex:1, justifyContent:'flex-start', alignItems:'center'}}>\n                    \n                </div>\n                <div style={{display:'flex', flex:1, justifyContent:'center', alignItems:'center'}}>\n                    <Button color=\"inherit\" style={{marginRight:15}} onClick={() => handleClick('/SDI')}>Home</Button>\n                    {/* <Button color=\"inherit\" style={{marginRight:15}} onClick={() => handleClick('/Documents')}>Documents</Button>\n                    <Button color=\"inherit\" style={{marginRight:15}} onClick={() => handleClick('/Report')}>Report</Button> */}\n                </div>\n            </div>\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n}","import React from 'react';\nimport Particles from 'react-particles-js';\n\nconst ParticlesComponent = () => (\n  <div\n    style={{\n      width: '100%',\n      height: '100%',\n      position: 'fixed',\n    }}\n  >\n    <Particles\n      height={window.outerHeight}\n      params={{\n        background: {\n          color: {\n            value: '#FFFFFF',\n          },\n        },\n        particles: {\n          number: {\n            value: 100,\n            density: {\n              enable: true,\n              value_area: 800,\n            },\n          },\n          color: {\n            value: '#044022',\n          },\n          shape: {\n            type: 'circle',\n            stroke: {\n              width: 0,\n              color: '#000000',\n            },\n            polygon: {\n              nb_sides: 5,\n            },\n          },\n          opacity: {\n            value: 0.5,\n            random: false,\n            anim: {\n              enable: false,\n              speed: 0.5,\n              opacity_min: 0.1,\n              sync: false,\n            },\n          },\n          size: {\n            value: 3,\n            random: true,\n            anim: {\n              enable: false,\n              speed: 0.5,\n              size_min: 0.1,\n              sync: false,\n            },\n          },\n          line_linked: {\n            enable: true,\n            distance: 150,\n            color: '#044022',\n            opacity: 0.4,\n            width: 1,\n          },\n          move: {\n            enable: true,\n            speed: 0.5,\n            direction: 'none',\n            random: false,\n            straight: false,\n            out_mode: 'out',\n            bounce: false,\n            attract: {\n              enable: false,\n              rotateX: 600,\n              rotateY: 1200,\n            },\n          },\n        },\n        interactivity: {\n          detect_on: 'canvas',\n          events: {\n            onhover: {\n              enable: true,\n              mode: 'attract',\n            },\n            resize: true,\n          },\n          modes: {\n            attract: {\n              distance: 100,\n              duration: 1,\n              speed: 0.5,\n            },\n          },\n        },\n        retina_detect: true,\n      }}\n    />\n  </div>\n);\n\nexport default ParticlesComponent;\n","import React, { useEffect } from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport Typography from '@material-ui/core/Typography';\nimport '../../App.css';\nimport data from '../../assets/data.json'\nimport { useHistory } from \"react-router-dom\";\nimport ParticlesComponent from './Particles';\n\nconst Home = () => {\n\n  let history = useHistory();\n\n  const [value, setValue] = React.useState('');\n  const [inputValue, setInputValue] = React.useState('');\n\n  useEffect(() => {\n    if(inputValue !== \"\"){\n      const route = data.data.find((element) => element.title === inputValue)\n      history.push(`/${route.id}`)\n    }\n  }, [value])\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <ParticlesComponent/>\n        <Typography variant=\"h4\" style={{color:'#282c34', marginBottom:'3vh'}}>\n            Western Cape Renewable Energy Data Portal\n        </Typography>\n        <Autocomplete\n            id=\"combo-box-demo\"\n            value={value}\n            onChange={(event, newValue) => {\n              setValue(newValue);\n            }}\n            inputValue={inputValue}\n            onInputChange={(event, newInputValue) => {\n              setInputValue(newInputValue);\n            }}\n            options={data.data}\n            getOptionLabel={(option) => option.title}\n            style={{ width: '40vh', backgroundColor:'white'}}\n            renderInput={(params) => <TextField {...params} label=\"Search data\" variant=\"outlined\" style={{backgroundColor:'#ffffff'}}/>}\n        />\n      </header>\n    </div>\n  );\n}\n\nexport default Home;\n","import React from 'react'\n\nconst Report = () => {\n    return (\n        <div>\n            <p>Report</p>\n        </div>\n    )\n}\n\nexport default Report","import React from 'react'\n\nconst Documents = () => {\n    return (\n        <div>\n            <p>Documents</p>\n        </div>\n    )\n}\n\nexport default Documents","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\n\nconst useStyles = makeStyles({\n  table: {\n    maxWidth: '30vw',\n    width:'30vw',\n    maxHeight:'15vh',\n    height:'15vh' \n  },\n});\n\nfunction createData(name, value) {\n  return { name, value };\n}\n\nconst getData = (data) => {\n    let rows = []\n    data.map((element) => {\n        rows.push(createData(element[0], element[1]))\n    })\n    return rows\n}\n\nexport default function BasicTable({\n    data\n}) {\n  const classes = useStyles();\n\n  return (\n    <TableContainer component={Paper}>\n      <Table className={classes.table} aria-label=\"simple table\">\n        <TableBody>\n          {getData(Object.keys(data).map((key) => [key, data[key]])).map((row) => (\n            <TableRow key={row.name}>\n              <TableCell component=\"th\" scope=\"row\">\n                {row.name}\n              </TableCell>\n              <TableCell align=\"right\">{row.value}</TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n}","import React, { useEffect, useState } from 'react'\nimport { MapContainer, TileLayer, WMSTileLayer, LayersControl, Popup, Polyline, CircleMarker, Polygon, FeatureGroup } from \"react-leaflet\";\nimport VectorDataDisplay from '../VectorDataDisplay'\nimport reea from '../../../assets/GeoJSON/reea.json'\nimport grid from '../../../assets/GeoJSON/grid.json'\nimport substations from '../../../assets/GeoJSON/substations.json'\nimport roads from '../../../assets/GeoJSON/roads.json'\nimport wave from '../../../assets/GeoJSON/wave.json'\n\nconst Map = ({\n    dataset\n}) => {\n\n    const position = [-33.542795, 20.441732]\n\n    const polygonOptions = { color: '#00c853', weight:1, fillColor: 'green' }\n    const polylineOptions = { color: '#039be5', weight:1, fillColor: '#039be5'}\n    const circleOptions = { color: '#c62828', weight:1, fillColor: '#f44336'}\n\n    const getPoints = (arr) => {\n        let points = []\n        arr.forEach(element => {\n            let test = element.reverse()\n            points.push([test[1], test[0]])\n        })\n        return points\n    }\n\n    useEffect(() => {\n        switch (dataset.id) {\n            case 'reea':\n                setLayer(reea)\n                setLoading(false)\n                break\n            case 'grid':\n                setLayer(grid)\n                setLoading(false)\n                break\n            case 'substations':\n                setLayer(substations)\n                setLoading(false)\n                break\n            case 'roads':\n                setLayer(roads)\n                setLoading(false)\n                break\n            case 'wave':\n                setLayer(wave)\n                setLoading(false)\n                break\n        }\n    })\n\n    const [loading, setLoading] = useState(true)\n    const [layer, setLayer] = useState(null)\n\n    return (\n        <MapContainer center={position} zoom={6} scrollWheelZoom={true}>\n            <LayersControl position=\"topright\">\n                <LayersControl.BaseLayer checked name=\"Base OpenStreetMap\">\n                    <TileLayer\n                        attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n                        url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n                    />\n                </LayersControl.BaseLayer>\n                <LayersControl.Overlay name={dataset.title} checked>\n                    {/* {dataset.type === 'raster' ? */}\n                        <WMSTileLayer\n                            url={dataset.url}\n                            layers={dataset.layer}\n                            format=\"image/png\"\n                            transparent=\"true\"\n                        /> \n                        {/* : <FeatureGroup>\n                            <div>\n                                {loading ? <p>nothing</p> : layer.features.map((element) => {\n                                    switch (layer.geometryType) {\n                                        case \"esriGeometryPolygon\":\n                                            return (element.geometry.rings.map(ele => (\n                                                <Polygon pathOptions={polygonOptions} positions={getPoints(ele)}>\n                                                    <Popup maxWidth=\"35vw\" maxHeight=\"auto\" maxHeight='auto' height=\"30vh\">\n                                                        {\n                                                            <div style={{ width: '35vw', maxWidth: '35vw', maxHeight: '25vh', height: \"30vh\", display: 'flex' }}>\n                                                                <VectorDataDisplay\n                                                                    data={element.attributes}\n                                                                />\n                                                            </div>\n                                                        }\n                                                    </Popup>\n                                                </Polygon>\n                                            )))\n                                        case \"esriGeometryPolyline\":\n                                            return (element.geometry.paths.map(ele => (\n                                                <Polyline pathOptions={polylineOptions} positions={getPoints(ele)}>\n                                                    <Popup maxWidth=\"35vw\" maxHeight=\"auto\" maxHeight='auto' height=\"30vh\">\n                                                        {\n                                                            <div style={{ width: '35vw', maxWidth: '35vw', maxHeight: '25vh', height: \"30vh\", display: 'flex' }}>\n                                                                <VectorDataDisplay\n                                                                    data={element.attributes}\n                                                                />\n                                                            </div>\n                                                        }\n                                                    </Popup>\n                                                </Polyline>\n                                            )))\n                                        case \"esriGeometryPoint\":\n                                            return (\n                                                <CircleMarker center={[element.geometry.y, element.geometry.x]} pathOptions={circleOptions} radius={5}>\n                                                    <Popup maxWidth=\"35vw\" maxHeight=\"auto\" maxHeight='auto' height=\"30vh\">\n                                                        {\n                                                            <div style={{ width: '35vw', maxWidth: '35vw', maxHeight: '25vh', height: \"30vh\", display: 'flex' }}>\n                                                                <VectorDataDisplay\n                                                                    data={element.attributes}\n                                                                />\n                                                            </div>\n                                                        }\n                                                    </Popup>\n                                                </CircleMarker>\n                                            )\n                                    }\n                                })}\n                            </div>\n                        </FeatureGroup>\n                    } */}\n                </LayersControl.Overlay>\n            </LayersControl>\n        </MapContainer>\n    )\n}\n\nexport default Map","import React from 'react'\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid'\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Typography from '@material-ui/core/Typography';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport Avatar from '@material-ui/core/Avatar';\nimport UpdateIcon from '@material-ui/icons/Update';\nimport StorageIcon from '@material-ui/icons/Storage';\nimport CategoryIcon from '@material-ui/icons/Category';\nimport InfoIcon from '@material-ui/icons/Info';\nimport Button from '@material-ui/core/Button';\nimport PolicyIcon from '@material-ui/icons/Policy';\nimport PublicIcon from '@material-ui/icons/Public';\nimport PersonIcon from '@material-ui/icons/Person';\n\nconst drawerWidth = '20vw';\n\nconst useStyles = makeStyles((theme) => ({\n  drawerPaper: {\n    width: drawerWidth,\n  },\n  drawerContainer: {\n    overflow: 'auto',\n    display: 'flex',\n    flexDirection: 'column',\n  },\n}));\n\nconst DrawerContent = ({\n  dataset,\n  loading\n}) => {\n  const classes = useStyles();\n\n  return (\n    <div> {loading ? <div style={{display:'flex', flex:1, height:'93vh', justifyContent:'center', alignItems:'center'}}><CircularProgress /></div> : <div className={classes.drawerContainer}>\n      <div style={{ height: '33vh', padding: '1vw' }}>\n        <Typography variant='h5' style={{ marginTop: '1vh', marginBottom: '1vh' }}>\n          {dataset.title}\n        </Typography>\n        <ListItem style={{ padding: 0, marginBottom: '1vh' }}>\n          <ListItemAvatar>\n            <Avatar>\n              <PersonIcon />\n            </Avatar>\n          </ListItemAvatar>\n          <ListItemText primary={dataset.metadata.Owner} secondary={dataset.metadata.Date} />\n        </ListItem>\n        <Typography variant='h6' style={{ padding: 0, marginBottom: 10 }}>\n          Summary\n        </Typography>\n        <Grid direction=\"column\" container style={{height:'17vh', overflow: 'auto', width:'16vw'}}>\n          <Typography\n            gutterBottom\n            variant='body2'\n          >\n            {dataset.metadata.Abstract}\n          </Typography>\n        </Grid>\n\n      </div>\n\n      <div style={{ height:'43vh', overflow: 'auto', width:'17vw', marginTop:'5vh' }}>\n        <List className={classes.root}>\n          <ListItem>\n            <ListItemAvatar>\n              <Avatar>\n                <StorageIcon />\n              </Avatar>\n            </ListItemAvatar>\n            <ListItemText primary={dataset.metadata.Type} secondary=\"Type\" />\n          </ListItem>\n          <ListItem>\n            <ListItemAvatar>\n              <Avatar>\n                <InfoIcon />\n              </Avatar>\n            </ListItemAvatar>\n            <ListItemText primary={dataset.metadata.Date} secondary=\"Info updated\" />\n          </ListItem>\n          <ListItem>\n            <ListItemAvatar>\n              <Avatar>\n                <UpdateIcon />\n              </Avatar>\n            </ListItemAvatar>\n            <ListItemText primary={dataset.metadata.End} secondary=\"Data updated\" />\n          </ListItem>\n          <ListItem>\n            <ListItemAvatar>\n              <Avatar>\n                <CategoryIcon />\n              </Avatar>\n            </ListItemAvatar>\n            <ListItemText primary={dataset.metadata.Category} secondary=\"Category\" />\n          </ListItem>\n          <ListItem>\n            <ListItemAvatar>\n              <Avatar>\n                <PublicIcon />\n              </Avatar>\n            </ListItemAvatar>\n            <ListItemText primary={dataset.metadata[\"Spatial Reference System Identifier\"]} secondary=\"Spatial Reference System Identifier\" />\n          </ListItem>\n          <ListItem>\n            <ListItemAvatar>\n              <Avatar>\n                <PolicyIcon />\n              </Avatar>\n            </ListItemAvatar>\n            <ListItemText primary={dataset.metadata.Restrictions} secondary=\"Restrictions Information\" />\n          </ListItem>\n        </List>\n      </div>\n      <div style={{display:'flex', flex:1, justifyContent:'center', marginTop:'4vh'}}>\n        <Button variant=\"outlined\" color=\"primary\" style={{width:'12vw'}} onClick={() => window.open(\"https://drive.google.com/drive/folders/1JBUs7ZU3U196K0zrO4YfEVsJhyqUNwxj?usp=sharing\", \"_blank\")}>\n          Download data\n        </Button>\n      </div>\n    </div>}\n  </div>\n  )\n}\n\nexport default DrawerContent","import React, {useEffect, useState} from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Map from './Map'\nimport DrawerContent from './DrawerContent';\nimport { useLocation } from 'react-router-dom'\nimport data from '../../assets/data.json'\n\nconst drawerWidth = '18vw';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n    height:'93vh',\n  },\n  drawerPaper: {\n    width: drawerWidth,\n  },\n  drawerContainer: {\n    overflow: 'auto',\n    display:'flex',\n    flexDirection:'column',\n  },\n  content: {\n    flexGrow: 1,\n  },\n}));\n\nexport default function DataDisplay() {\n  const classes = useStyles();\n\n  const location = useLocation();\n\n  const [loading, setIsLoading] = useState(true)\n  const [dataset, setDataset] = useState(null)\n\n  useEffect(() => {\n    const requiredData = data.data.find(element => element.pathname === location.pathname)\n    setDataset(requiredData)\n    setIsLoading(false)\n  }, [])\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <Drawer\n        className={classes.drawer}\n        variant=\"permanent\"\n        classes={{\n          paper: classes.drawerPaper,\n        }}\n      >\n        <Toolbar />\n        <DrawerContent \n          dataset={dataset}\n          loading={loading}\n        />\n      </Drawer>\n      <main className={classes.content}>\n        <Toolbar />\n        {loading ? \n          <div style={{display:'flex', height:'93vh', justifyContent:'center', alignItems:'center'}}>\n            <CircularProgress />\n          </div> : \n            <Map\n              dataset={dataset}\n            /> \n        }\n      </main>\n    </div>\n  );\n}\n","import React from \"react\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n} from \"react-router-dom\";\nimport Nav from './views/Nav/'\nimport Home from './views/Home'\nimport Report from './views/Report'\nimport Documents from './views/Documents'\nimport DataDisplay from './views/DataDisplay'\n \nfunction App() {\n  return (\n    <Router>\n      <div>\n        <Nav/>\n        <Switch>\n          <Route path=\"/report\">\n            <Report />\n          </Route>\n          <Route path=\"/documents\">\n            <Documents />\n          </Route>\n          <Route path=\"/SDI\" exact>\n            <Home />\n          </Route>\n          <Route path=\"/:id\">\n            <DataDisplay/>\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}